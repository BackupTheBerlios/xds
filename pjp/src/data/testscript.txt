// This is a test source code for PJP interpreter
//
// sch110, luk117

write("Welcome to test script");
write("~~~~~~~~~~~~~~~~~~~~~~");
write("There should be neither Runtime error nor FALSE test result reported.");
write("");

// ------ declare some stuff
var br:boolean;
var a,b,c:string;
var r1, r2, r3:real;
var b1,b2:boolean;
var i1,i2,i3:integer;

// ------ initialize variables
a:="A"; b:="B"; c:="CCCC";
r1:=2e-81; r2:=3.14159; r3:=3.5e5;
i1:=10; i2:=3; i3:=1;

write("Performing BOOLEAN tests...");
write(false<(false<=(false>true))=true<>false);
write(not not not (a>b) <= (a.b>=a));
write(false<false>=false<>true and false);

write("Performing REAL tests...");
WRITE(((r1<r2) and (r2<=r3)) and not (3e10<r3));

write("Performing INTEGER tests...");
write((i1 mod i2 - 1 = 0) and ((i3+r1*r3/(r2+r1)-(i3+r1*r3/(r2+r1))) < 1e-10));
write((1.0/2+3) = (1.0/2.0+3.0));
write((-i1-i2-i3-i1-i2-i3-1 - (-i1-i2-i3-i1-i2-i3-1)) = 0);
writE(----(---i3)=-1);
write((-i1 = -1*i1) = (-i1 = -(1-1+i1)));

// these should fail
write("division by zero: INT-", 1/0, " REAL-", 1/0.0);

write("Performing STRING tests...");
write((a.(b."+").c="AB+CCCC") or not (a.b<a.b));

;;;;;;;;;